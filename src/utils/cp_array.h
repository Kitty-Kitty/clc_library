
#ifndef _CP_ARRAY_H_INCLUDED_
#define _CP_ARRAY_H_INCLUDED_


#include "cp_core.h"



typedef struct {
    void					*elts;					//表示当前内存序列的起始位置，没有个指针指向一个单元的起始位置
	size_t					nelts;					//表示当前已经被使用的单元数量
    size_t					size;					//表示每个单元占用的内存大小
	size_t					nalloc;					//表示总共可以保存的最大单元数量
} cp_array_t;





/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_init
*
* 函数说明: 初始化数组
*
* 参    数: cp_array_t * ary					[in]需要被初始化的数组
* 参    数: void * buffer					[in]表示当前可以使用内存空间起始位置
* 参    数: size_t size						[in]表示每个单元的内存大小
* 参    数: size_t count						[in]表示当前总单元数，其中size * count 就是buffer所指向的内存空间的大小
*
* 返 回 值: cp_int32_t
*           0  : 成功 
*         非 0  :失败
*
* 备    注:起始这个数据没有内存的操作，只是管理一个内存序列
*
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-08-15 15:09:10
******************************************************************************************************/
cp_int32_t cp_array_init(cp_array_t *ary, void *buffer, size_t size, size_t count);


/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_malloc_init
*
* 函数说明: 初始化array,默认自动分配内存空间,该接口需要使用cp_array_malloc_destroy进行释放
*
* 参    数: cp_array_t * ary					[in]需要被初始化的array
* 参    数: size_t size						[in]表示每个单元的内存大小
* 参    数: size_t count						[in]表示当前总单元数，其中size * count 就是buffer所指向的内存空间的大小
*
* 返 回 值: cp_int32_t
*           0  : 成功 
*         非 0  :失败
*
* 备    注:
*			该函数调用后，需要调用cp_array_malloc_destroy进行释放操作
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-09-18 16:48:56
******************************************************************************************************/
cp_int32_t cp_array_malloc_init(cp_array_t *ary, size_t size, size_t count);

/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_is_null
*
* 函数说明: 表示array是否为空，也就是为进行初始化
*
* 参    数: cp_array_t * ary						[in]参数说明
*
* 返 回 值: cp_int32_t
*           0  : 未初始化 
*         非 0  :已经初始化
*
* 备    注:其他说明内容
*
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-08-17 10:43:39
******************************************************************************************************/
#define		cp_array_is_null(ary)					(((ary)->size <= 0) ? 0 : -1)


/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_is_empty
*
* 函数说明: 表示array是否有可用元素
*
* 参    数: cp_array_t * ary						[in]参数说明
*
* 返 回 值: cp_int32_t
*           0  : 没有可以节点 
*         非 0  :有节点
*
* 备    注:其他说明内容
*
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-08-17 10:47:19
******************************************************************************************************/
#define		cp_array_is_empty(ary)					(((ary)->nelts <= 0) ? 0 : -1)


/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_max_size
*
* 函数说明: 表示获取当前array数组的长度
*
* 参    数: cp_array_t * ary						[in]参数说明
*
* 返 回 值: cp_int32_t
*           0  : 成功 
*         非 0  :失败
*
* 备    注:其他说明内容
*
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-08-21 10:44:51
******************************************************************************************************/
#define		cp_array_max_size(ary)				((ary)->nalloc)



/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_length
*
* 函数说明: 获取数组中已经保存的元素个数
*
* 参    数: cp_array_t * ary						[in]参数说明
*
* 返 回 值: cp_int32_t
*           0  : 成功 
*         非 0  :失败
*
* 备    注:其他说明内容
*
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-11-04 10:31:30
******************************************************************************************************/
#define	 cp_array_length(ary)					((ary)->nelts)
	

/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_set
*
* 函数说明: 表示在index位置插入elts所指向的内存数据
*
* 参    数: cp_array_t * ary				[in]需要被操作的数组
* 参    数: void * elts						[in]需要插入的数据的内存起始位置，其数据大小就是初始化时指定的大小
* 参    数: size_t index						[in]表示需要插入的索引位置
*
* 返 回 值: cp_int32_t
*           0  : 成功 
*         非 0  :失败
*
* 备    注:其他说明内容
*
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-08-15 15:14:32
******************************************************************************************************/
cp_int32_t cp_array_set(cp_array_t *ary, void *elts, size_t index);


/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_set_back
*
* 函数说明: 表示在最后面插入一个数据
*
* 参    数: cp_array_t * ary						[in]参数说明
* 参    数: void * elts						[in]参数说明
*
* 返 回 值: cp_int32_t
*           0  : 成功 
*         非 0  :失败
*
* 备    注:其他说明内容
*
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-08-15 15:17:10
******************************************************************************************************/
#define cp_array_set_back(ary, elts)		cp_array_set(ary, elts, cp_array_length(ary))

/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_get_elts
*
* 函数说明: 表示内存地址
*
* 参    数: cp_array_t * ary						[in]参数说明
*
* 返 回 值: void *
*           0  : 成功
*         非 0  :失败
*
* 备    注:其他说明内容
*
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-08-15 16:36:12
******************************************************************************************************/
#define cp_array_get_elts(ary)					((ary)->elts)

/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_get
*
* 函数说明: 表示获取指定位置的指
*
* 参    数: cp_array_t * ary						[in]参数说明
* 参    数: size_t index						[in]参数说明
*
* 返 回 值: void *
*           0  : 成功 
*         非 0  :失败
*
* 备    注:其他说明内容
*
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-08-15 16:36:12
******************************************************************************************************/
void *cp_array_get(const cp_array_t *ary, size_t index);

/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_remove
*
* 函数说明: 删除指定的节点
*
* 参    数: cp_array_t * ary						[in]参数说明
* 参    数: size_t index						[in]参数说明
*
* 返 回 值: cp_int32_t
*           0  : 成功 
*         非 0  :失败
*
* 备    注:其他说明内容
*
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-11-04 10:55:03
******************************************************************************************************/
cp_int32_t cp_array_remove(cp_array_t *ary, size_t index);


/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_clear
*
* 函数说明: 表示清空array中的所有内容
*
* 参    数: cp_array_t * ary						[in]参数说明
*
* 返 回 值: cp_int32_t
*           0  : 成功
*         非 0  :失败
*
* 备    注:主要操作是清除所有节点内容，但不清楚内容空间
*
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-11-04 16:00:55
******************************************************************************************************/
cp_int32_t cp_array_clear(cp_array_t *ary);

/******************************************************************************************************
* 版权所有: fz & novigo
*
* 函数名称: cp_array_malloc_destroy
*
* 函数说明: 表示释放array空间资源
*
* 参    数: cp_array_t * ary						[in]表示需要释放的array
*
* 返 回 值: cp_int32_t
*           0  : 成功 
*         非 0  :失败
*
* 备    注:其他说明内容
*
* 作    者：fz
* 电子邮箱： fangzhenmu@novigo.com.cn
* 创建日期：2016-09-18 16:52:02
******************************************************************************************************/
cp_int32_t cp_array_malloc_destroy(cp_array_t *ary);

#endif /* _CP_ARRAY_H_INCLUDED_ */
